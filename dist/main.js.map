{"version":3,"file":"main.js","mappings":"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","sources":["webpack://template/./src/styles.css","webpack://template/./node_modules/css-loader/dist/runtime/api.js","webpack://template/./node_modules/css-loader/dist/runtime/getUrl.js","webpack://template/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://template/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://template/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://template/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://template/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://template/./node_modules/style-loader/dist/runtime/styleDomAPI.js","webpack://template/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://template/webpack/bootstrap","webpack://template/webpack/runtime/compat get default export","webpack://template/webpack/runtime/define property getters","webpack://template/webpack/runtime/global","webpack://template/webpack/runtime/hasOwnProperty shorthand","webpack://template/webpack/runtime/publicPath","webpack://template/webpack/runtime/jsonp chunk loading","webpack://template/webpack/runtime/nonce","webpack://template/./src/styles.css?44b2","webpack://template/./src/general-functions.js","webpack://template/./src/weather.js","webpack://template/./node_modules/date-fns/toDate.mjs","webpack://template/./node_modules/date-fns/isValid.mjs","webpack://template/./node_modules/date-fns/isDate.mjs","webpack://template/./node_modules/date-fns/constructFrom.mjs","webpack://template/./node_modules/date-fns/_lib/defaultOptions.mjs","webpack://template/./node_modules/date-fns/getDefaultOptions.mjs","webpack://template/./node_modules/date-fns/locale/en-US/_lib/formatDistance.mjs","webpack://template/./node_modules/date-fns/locale/_lib/buildFormatLongFn.mjs","webpack://template/./node_modules/date-fns/locale/en-US/_lib/formatLong.mjs","webpack://template/./node_modules/date-fns/locale/en-US/_lib/formatRelative.mjs","webpack://template/./node_modules/date-fns/locale/_lib/buildLocalizeFn.mjs","webpack://template/./node_modules/date-fns/locale/en-US/_lib/localize.mjs","webpack://template/./node_modules/date-fns/locale/_lib/buildMatchFn.mjs","webpack://template/./node_modules/date-fns/locale/en-US/_lib/match.mjs","webpack://template/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.mjs","webpack://template/./node_modules/date-fns/locale/en-US.mjs","webpack://template/./node_modules/date-fns/_lib/format/longFormatters.mjs","webpack://template/./node_modules/date-fns/_lib/protectedTokens.mjs","webpack://template/./node_modules/date-fns/parse/_lib/Setter.mjs","webpack://template/./node_modules/date-fns/transpose.mjs","webpack://template/./node_modules/date-fns/parse/_lib/Parser.mjs","webpack://template/./node_modules/date-fns/constants.mjs","webpack://template/./node_modules/date-fns/parse/_lib/constants.mjs","webpack://template/./node_modules/date-fns/parse/_lib/utils.mjs","webpack://template/./node_modules/date-fns/startOfWeek.mjs","webpack://template/./node_modules/date-fns/getWeekYear.mjs","webpack://template/./node_modules/date-fns/startOfISOWeek.mjs","webpack://template/./node_modules/date-fns/getWeek.mjs","webpack://template/./node_modules/date-fns/startOfWeekYear.mjs","webpack://template/./node_modules/date-fns/getISOWeekYear.mjs","webpack://template/./node_modules/date-fns/getISOWeek.mjs","webpack://template/./node_modules/date-fns/startOfISOWeekYear.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/DateParser.mjs","webpack://template/./node_modules/date-fns/addDays.mjs","webpack://template/./node_modules/date-fns/setDay.mjs","webpack://template/./node_modules/date-fns/setISODay.mjs","webpack://template/./node_modules/date-fns/getISODay.mjs","webpack://template/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/EraParser.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/YearParser.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/LocalWeekYearParser.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/ISOWeekYearParser.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/ExtendedYearParser.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/QuarterParser.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/StandAloneQuarterParser.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/MonthParser.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/StandAloneMonthParser.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/LocalWeekParser.mjs","webpack://template/./node_modules/date-fns/setWeek.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/ISOWeekParser.mjs","webpack://template/./node_modules/date-fns/setISOWeek.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/DayOfYearParser.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/DayParser.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/LocalDayParser.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/StandAloneLocalDayParser.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/ISODayParser.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/AMPMParser.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/AMPMMidnightParser.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/DayPeriodParser.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/Hour1to12Parser.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/Hour0to23Parser.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/Hour0To11Parser.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/Hour1To24Parser.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/MinuteParser.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/SecondParser.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/FractionOfSecondParser.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/ISOTimezoneWithZParser.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/ISOTimezoneParser.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/TimestampSecondsParser.mjs","webpack://template/./node_modules/date-fns/parse/_lib/parsers/TimestampMillisecondsParser.mjs","webpack://template/./node_modules/date-fns/parse.mjs","webpack://template/./node_modules/date-fns/isBefore.mjs","webpack://template/./node_modules/date-fns/isAfter.mjs","webpack://template/./node_modules/date-fns/startOfDay.mjs","webpack://template/./node_modules/date-fns/getDayOfYear.mjs","webpack://template/./node_modules/date-fns/differenceInCalendarDays.mjs","webpack://template/./node_modules/date-fns/startOfYear.mjs","webpack://template/./node_modules/date-fns/_lib/addLeadingZeros.mjs","webpack://template/./node_modules/date-fns/_lib/format/lightFormatters.mjs","webpack://template/./node_modules/date-fns/_lib/format/formatters.mjs","webpack://template/./node_modules/date-fns/format.mjs","webpack://template/./node_modules/date-fns/subMonths.mjs","webpack://template/./node_modules/date-fns/addMonths.mjs","webpack://template/./node_modules/date-fns/sub.mjs","webpack://template/./node_modules/date-fns/subDays.mjs","webpack://template/./node_modules/date-fns/lightFormat.mjs","webpack://template/./src/globals.js","webpack://template/./src/pageUpdateFunctions.js","webpack://template/./node_modules/date-fns/isMatch.mjs","webpack://template/./src/index.js"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../node_modules/css-loader/dist/runtime/getUrl.js\";\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(\"/home/asteroidblues30/repos/star-wars-weather/src/backgrounds/stars.jpg\", import.meta.url);\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/* styles.css */\n/* From: Josh's Custom CSS Reset\n  https://www.joshwcomeau.com/css/custom-css-reset/\n*/\n*,\n*::before,\n*::after {\n    box-sizing: border-box;\n}\n\n* {\n    margin: 0;\n    padding: 0;\n}\n\nbody {\n    line-height: 1.5;\n    -webkit-font-smoothing: antialiased;\n}\n\nimg,\npicture,\nvideo,\ncanvas,\nsvg {\n    display: block;\n    /* max-width: 100%; */\n}\n\ninput,\nbutton,\ntextarea,\nselect {\n    font: inherit;\n}\n\np,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n    overflow-wrap: break-word;\n}\n\n#root,\n#__next {\n    isolation: isolate;\n}\n\n/* -------------------------------------------------------------------------\n*/\n/* @font-face {\n    font-family: myFirstFont;\n    src: url('./fonts/star-jedi-font/StarJedi-DGRW.ttf') format('truetype');\n} */\n\n\n:root {\n    font-size: 12px;\n\n    --font-size-small: 1rem;\n    --font-size-medium: 1.5rem;\n    --font-size-large: 1.7rem;\n    --font-size-jumbo: 4rem;\n\n    --page-width: 750px;\n\n\n    --big-icon-side-length: 100px;\n    --search-section-length: calc(1.5 * var(--big-icon-side-length));\n\n    --standard-gap: 10px;\n\n\n    --general-padding: 20px;\n    --text-box-padding: 5px;\n\n\n\n    --button-height: 40px;\n    --button-padding: 5px;\n\n\n    white-space: nowrap;\n    --general-border-radius: 15px;\n\n\n}\n\n\n\n\n.dark {\n    /* Nighttime Color Scheme*/\n    --primary-background-color: #083344;\n    --primary-font-color: #fef3c7;\n\n    --high-temp-color: red;\n    --low-temp-color: rgb(67, 189, 87);\n    --humidity-color: rgb(115, 198, 185);\n\n\n}\n\n.light {\n    /* Morning/Day/Evening Color Scheme*/\n    --primary-background-color: #fef3c7;\n    --primary-font-color: #1c1917;\n\n    --high-temp-color: red;\n    --low-temp-color: blue;\n    --humidity-color: rgb(132, 73, 215);\n}\n\nbody {\n    background-image: url(${___CSS_LOADER_URL_REPLACEMENT_0___});\n    background-size: cover;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    /* height: 100vh; */\n}\n\n\n\n\n.main-container {\n\n    /* font-family: myFirstFont; */\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    gap: 15px;\n\n    border-radius: var(--general-border-radius);\n    /* width: 85vw; */\n    min-width: 1250px;\n\n    margin: 50px;\n    border: 10px solid var(--primary-background-color);\n\n    background-color: var(--primary-background-color);\n    /* background-image: url(\"./backgrounds/sunset-bespin.png\"); */\n    height: 80vh;\n\n}\n\n\n\n\n\n.search-container {\n    display: flex;\n    width: var(--search-section-length);\n\n    justify-content: space-between;\n\n\n}\n\n.header {\n    /* height: 10vh; */\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: var(--standard-gap);\n\n    width: 100%;\n\n    height: 100px;\n\n}\n\n\n.today-header {\n    font-size: var(--font-size-jumbo);\n    text-align: center;\n\n    /* padding: var(--general-padding); */\n\n    /* border: 2px solid black; */\n\n    background-color: var(--primary-background-color);\n    color: var(--primary-font-color);\n    white-space: nowrap;\n}\n\n.convert-temp-btn {\n    font-size: var(--font-size-large);\n    width: 180px;\n    height: var(--button-height);\n   \n    border-radius: var(--general-border-radius);\n    padding: var(--button-padding);\n}\n\n.search-bar {\n    font-size: var(--font-size-large);\n    /* align-self: center; */\n    width: 300px;\n    height: var(--button-height);\n    margin-left: auto;\n    border-radius: var(--general-border-radius);\n\n    /* padding: var(--text-box-padding); */\n\n    padding: var(--button-padding);\n}\n\n.search-btn {\n    font-size: var(--font-size-large);\n    border-radius: var(--general-border-radius);\n    width: 100px;\n    height: var(--button-height);\n    padding: var(--button-padding);\n}\n\n.middle-section {\n    width: 100%;\n    height: 70vh;\n    border-radius: var(--general-border-radius);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    background-position: 0 center;\n    background-repeat: no-repeat;\n    background-size: cover;\n\n    position: relative;\n}\n\n\n\n.todays-weather-container {\n\n    width: 500px;\n    /* display: grid; */\n\n\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n\n    border: 2px solid black;\n    padding: 20px;\n    border-radius: var(--general-border-radius);\n\n    background-color: var(--primary-background-color);\n    color: var(--primary-font-color);\n\n\n}\n\n.weather-container-header {\n    display: flex;\n    width: 100%;\n    gap: var(--standard-gap);\n}\n\n.todays-weather-location {\n    font-size: var(--font-size-large);\n    /* text-align: center; */\n    /* grid-column: 1 / 4; */\n\n    justify-content: space-between;\n    align-items: center;\n    background-color: var(--primary-background-color);\n    overflow: hidden;\n    text-overflow: ellipsis;\n\n}\n\n.todays-weather-localtime {\n\n    margin-left: auto;\n    font-size: var(--font-size-large);\n    white-space: nowrap;\n}\n\n.weather-container-second-row {\n    display: flex;\n    gap: 25px;\n    justify-content: left;\n}\n\n.todays-icon-container {\n    grid-row: 2 / 4;\n\n\n    width: var(--big-icon-side-length);\n    height: var(--big-icon-side-length);\n\n    /* border: 2px solid black; */\n    background-position: center center;\n    background-repeat: no-repeat;\n    background-size: contain;\n\n    flex: 0 0 auto;\n\n    background-color: white;\n\n}\n\n\n.temp-and-conditions-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n}\n\n.current-conditions {\n    font-size: var(--font-size-large);\n}\n\n.current-temp {\n    font-size: var(--font-size-jumbo);\n    /* margin-left: auto; */\n\n\n    /* border: 2px solid black; */\n    background-color: var(--primary-background-color);\n}\n\n\n.high-low-box {\n    display: flex;\n    flex-direction: column;\n\n    /* margin-right:auto; */\n    justify-content: center;\n}\n\n/* .low-box {\n    grid-column: 2 / 3;\n\n\n}\n\n.high-box {\n    grid-column: 3 / 4;\n\n\n} */\n\n\n\n.condition-row {\n    font-size: var(--font-size-large);\n    /* border: 2px solid black; */\n\n    display: flex;\n    /* align-self: start;\n    justify-self: center; */\n\n    background-color: var(--primary-background-color);\n    gap: 5px;\n}\n\n.high {\n    color: var(--high-temp-color);\n    /* border: 2px solid black; */\n}\n\n.low {\n    color: var(--low-temp-color);\n    /* border: 2px solid black; */\n}\n\n.humidity {\n    color: var(--humidity-color);\n}\n\n\n\n.current-description {\n    font-size: var(--font-size-large);\n    /* text-align: center; */\n    /* border: 2px solid black; */\n\n    align-self: center;\n    justify-self: center;\n    grid-column: 1 / 4;\n\n    background-color: var(--primary-background-color);\n\n    /* white-space: ; */\n    white-space: wrap;\n}\n\n\n\n\n.upcoming-container {\n    display: flex;\n    border: 2px solid black;\n\n    /* height: 20vh; */\n    background-color: var(--primary-background-color);\n}\n\n.upcoming-day {\n    height: 100px;\n    width: 50px;\n}\n\n.weather-like{\n    position: absolute;\n    /* width: 150px; */\n    \n    border-radius: var(--general-border-radius);\n    padding: var(--button-padding);\n    font-size: var(--font-size-medium);\n    top: 90%;\n    left: 70%;\n    border: 3px solid black;\n    \n    background-color:  var(--primary-background-color);\n    color: var(--primary-font-color);\n}\n\n@media (max-width: 425px) {\n    :root {\n        font-size: 7px;\n\n        --font-size-large: 2rem;\n        --font-size-jumbo: 2.5rem;\n\n        --big-icon-side-length: 50px;\n\n        --button-height: 30px;\n        --button-padding: 4px;\n    }\n\n    body {\n        max-width: 350px;\n        overflow-y: scroll;\n        height: 100vh;\n        margin: 10px;\n        justify-content: center;\n        align-items: center;\n        \n\n    }\n\n    .main-container {\n        /* max-width: 400px; */\n        min-width: 0px;\n        height: 85vh;\n        margin: 10px;\n        gap: 5px;\n        justify-content: center;\n    }\n\n    .header {\n        /* height: 10vh; */\n        justify-content: center;\n        align-items: center;\n        flex-direction: column;\n        height: 150px;\n    }\n\n    .convert-temp-btn {\n\n       \n        width: 100px;\n\n    }\n\n\n    .search-bar {\n        margin-left: inherit;\n        width: 200px;\n     \n\n\n    }\n\n    .search-btn {\n        font-size: var(--font-size-large);\n        border-radius: var(--general-border-radius);\n        width: 100px;\n      \n    }\n\n    .middle-section {\n        width: 100%;\n        height: 500px;\n\n    }\n\n\n    .todays-weather-container {\n\n        width: 70%;\n        justify-content: center;\n        align-items: center;\n\n    }\n\n    .weather-container-header {\n        display: flex;\n        width: 100%;\n        gap: var(--standard-gap);\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n    }\n\n    .todays-weather-location {\n    \n        text-align: center;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        width: 90%;\n\n    }\n\n    .todays-weather-localtime {\n\n        margin-left: inherit;\n        font-size: var(--font-size-large);\n        white-space: nowrap;\n    }\n\n    .weather-container-second-row {\n    \n        flex-direction: column;\n      \n        justify-content: left;\n        align-items: center;\n    }\n\n    \n    \n\n    .condition-row {\n       \n        justify-content: space-around;\n    \n\n\n      \n    }\n\n\n    .weather-like{\n       \n        /* height: 40px; */\n       \n        padding: 3px;\n        font-size: var(--font-size-medium);\n        top: 90%;\n        left: 26%;\n        \n    }\n    \n\n}`, \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"/* styles.css */\\n/* From: Josh's Custom CSS Reset\\n  https://www.joshwcomeau.com/css/custom-css-reset/\\n*/\\n*,\\n*::before,\\n*::after {\\n    box-sizing: border-box;\\n}\\n\\n* {\\n    margin: 0;\\n    padding: 0;\\n}\\n\\nbody {\\n    line-height: 1.5;\\n    -webkit-font-smoothing: antialiased;\\n}\\n\\nimg,\\npicture,\\nvideo,\\ncanvas,\\nsvg {\\n    display: block;\\n    /* max-width: 100%; */\\n}\\n\\ninput,\\nbutton,\\ntextarea,\\nselect {\\n    font: inherit;\\n}\\n\\np,\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6 {\\n    overflow-wrap: break-word;\\n}\\n\\n#root,\\n#__next {\\n    isolation: isolate;\\n}\\n\\n/* -------------------------------------------------------------------------\\n*/\\n/* @font-face {\\n    font-family: myFirstFont;\\n    src: url('./fonts/star-jedi-font/StarJedi-DGRW.ttf') format('truetype');\\n} */\\n\\n\\n:root {\\n    font-size: 12px;\\n\\n    --font-size-small: 1rem;\\n    --font-size-medium: 1.5rem;\\n    --font-size-large: 1.7rem;\\n    --font-size-jumbo: 4rem;\\n\\n    --page-width: 750px;\\n\\n\\n    --big-icon-side-length: 100px;\\n    --search-section-length: calc(1.5 * var(--big-icon-side-length));\\n\\n    --standard-gap: 10px;\\n\\n\\n    --general-padding: 20px;\\n    --text-box-padding: 5px;\\n\\n\\n\\n    --button-height: 40px;\\n    --button-padding: 5px;\\n\\n\\n    white-space: nowrap;\\n    --general-border-radius: 15px;\\n\\n\\n}\\n\\n\\n\\n\\n.dark {\\n    /* Nighttime Color Scheme*/\\n    --primary-background-color: #083344;\\n    --primary-font-color: #fef3c7;\\n\\n    --high-temp-color: red;\\n    --low-temp-color: rgb(67, 189, 87);\\n    --humidity-color: rgb(115, 198, 185);\\n\\n\\n}\\n\\n.light {\\n    /* Morning/Day/Evening Color Scheme*/\\n    --primary-background-color: #fef3c7;\\n    --primary-font-color: #1c1917;\\n\\n    --high-temp-color: red;\\n    --low-temp-color: blue;\\n    --humidity-color: rgb(132, 73, 215);\\n}\\n\\nbody {\\n    background-image: url(\\\"/home/asteroidblues30/repos/star-wars-weather/src/backgrounds/stars.jpg\\\");\\n    background-size: cover;\\n\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n\\n    /* height: 100vh; */\\n}\\n\\n\\n\\n\\n.main-container {\\n\\n    /* font-family: myFirstFont; */\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: space-between;\\n    align-items: center;\\n    gap: 15px;\\n\\n    border-radius: var(--general-border-radius);\\n    /* width: 85vw; */\\n    min-width: 1250px;\\n\\n    margin: 50px;\\n    border: 10px solid var(--primary-background-color);\\n\\n    background-color: var(--primary-background-color);\\n    /* background-image: url(\\\"./backgrounds/sunset-bespin.png\\\"); */\\n    height: 80vh;\\n\\n}\\n\\n\\n\\n\\n\\n.search-container {\\n    display: flex;\\n    width: var(--search-section-length);\\n\\n    justify-content: space-between;\\n\\n\\n}\\n\\n.header {\\n    /* height: 10vh; */\\n    display: flex;\\n    justify-content: space-between;\\n    align-items: center;\\n    gap: var(--standard-gap);\\n\\n    width: 100%;\\n\\n    height: 100px;\\n\\n}\\n\\n\\n.today-header {\\n    font-size: var(--font-size-jumbo);\\n    text-align: center;\\n\\n    /* padding: var(--general-padding); */\\n\\n    /* border: 2px solid black; */\\n\\n    background-color: var(--primary-background-color);\\n    color: var(--primary-font-color);\\n    white-space: nowrap;\\n}\\n\\n.convert-temp-btn {\\n    font-size: var(--font-size-large);\\n    width: 180px;\\n    height: var(--button-height);\\n   \\n    border-radius: var(--general-border-radius);\\n    padding: var(--button-padding);\\n}\\n\\n.search-bar {\\n    font-size: var(--font-size-large);\\n    /* align-self: center; */\\n    width: 300px;\\n    height: var(--button-height);\\n    margin-left: auto;\\n    border-radius: var(--general-border-radius);\\n\\n    /* padding: var(--text-box-padding); */\\n\\n    padding: var(--button-padding);\\n}\\n\\n.search-btn {\\n    font-size: var(--font-size-large);\\n    border-radius: var(--general-border-radius);\\n    width: 100px;\\n    height: var(--button-height);\\n    padding: var(--button-padding);\\n}\\n\\n.middle-section {\\n    width: 100%;\\n    height: 70vh;\\n    border-radius: var(--general-border-radius);\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n\\n    background-position: 0 center;\\n    background-repeat: no-repeat;\\n    background-size: cover;\\n\\n    position: relative;\\n}\\n\\n\\n\\n.todays-weather-container {\\n\\n    width: 500px;\\n    /* display: grid; */\\n\\n\\n    display: flex;\\n    flex-direction: column;\\n    gap: 15px;\\n\\n    border: 2px solid black;\\n    padding: 20px;\\n    border-radius: var(--general-border-radius);\\n\\n    background-color: var(--primary-background-color);\\n    color: var(--primary-font-color);\\n\\n\\n}\\n\\n.weather-container-header {\\n    display: flex;\\n    width: 100%;\\n    gap: var(--standard-gap);\\n}\\n\\n.todays-weather-location {\\n    font-size: var(--font-size-large);\\n    /* text-align: center; */\\n    /* grid-column: 1 / 4; */\\n\\n    justify-content: space-between;\\n    align-items: center;\\n    background-color: var(--primary-background-color);\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n\\n}\\n\\n.todays-weather-localtime {\\n\\n    margin-left: auto;\\n    font-size: var(--font-size-large);\\n    white-space: nowrap;\\n}\\n\\n.weather-container-second-row {\\n    display: flex;\\n    gap: 25px;\\n    justify-content: left;\\n}\\n\\n.todays-icon-container {\\n    grid-row: 2 / 4;\\n\\n\\n    width: var(--big-icon-side-length);\\n    height: var(--big-icon-side-length);\\n\\n    /* border: 2px solid black; */\\n    background-position: center center;\\n    background-repeat: no-repeat;\\n    background-size: contain;\\n\\n    flex: 0 0 auto;\\n\\n    background-color: white;\\n\\n}\\n\\n\\n.temp-and-conditions-container {\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n\\n}\\n\\n.current-conditions {\\n    font-size: var(--font-size-large);\\n}\\n\\n.current-temp {\\n    font-size: var(--font-size-jumbo);\\n    /* margin-left: auto; */\\n\\n\\n    /* border: 2px solid black; */\\n    background-color: var(--primary-background-color);\\n}\\n\\n\\n.high-low-box {\\n    display: flex;\\n    flex-direction: column;\\n\\n    /* margin-right:auto; */\\n    justify-content: center;\\n}\\n\\n/* .low-box {\\n    grid-column: 2 / 3;\\n\\n\\n}\\n\\n.high-box {\\n    grid-column: 3 / 4;\\n\\n\\n} */\\n\\n\\n\\n.condition-row {\\n    font-size: var(--font-size-large);\\n    /* border: 2px solid black; */\\n\\n    display: flex;\\n    /* align-self: start;\\n    justify-self: center; */\\n\\n    background-color: var(--primary-background-color);\\n    gap: 5px;\\n}\\n\\n.high {\\n    color: var(--high-temp-color);\\n    /* border: 2px solid black; */\\n}\\n\\n.low {\\n    color: var(--low-temp-color);\\n    /* border: 2px solid black; */\\n}\\n\\n.humidity {\\n    color: var(--humidity-color);\\n}\\n\\n\\n\\n.current-description {\\n    font-size: var(--font-size-large);\\n    /* text-align: center; */\\n    /* border: 2px solid black; */\\n\\n    align-self: center;\\n    justify-self: center;\\n    grid-column: 1 / 4;\\n\\n    background-color: var(--primary-background-color);\\n\\n    /* white-space: ; */\\n    white-space: wrap;\\n}\\n\\n\\n\\n\\n.upcoming-container {\\n    display: flex;\\n    border: 2px solid black;\\n\\n    /* height: 20vh; */\\n    background-color: var(--primary-background-color);\\n}\\n\\n.upcoming-day {\\n    height: 100px;\\n    width: 50px;\\n}\\n\\n.weather-like{\\n    position: absolute;\\n    /* width: 150px; */\\n    \\n    border-radius: var(--general-border-radius);\\n    padding: var(--button-padding);\\n    font-size: var(--font-size-medium);\\n    top: 90%;\\n    left: 70%;\\n    border: 3px solid black;\\n    \\n    background-color:  var(--primary-background-color);\\n    color: var(--primary-font-color);\\n}\\n\\n@media (max-width: 425px) {\\n    :root {\\n        font-size: 7px;\\n\\n        --font-size-large: 2rem;\\n        --font-size-jumbo: 2.5rem;\\n\\n        --big-icon-side-length: 50px;\\n\\n        --button-height: 30px;\\n        --button-padding: 4px;\\n    }\\n\\n    body {\\n        max-width: 350px;\\n        overflow-y: scroll;\\n        height: 100vh;\\n        margin: 10px;\\n        justify-content: center;\\n        align-items: center;\\n        \\n\\n    }\\n\\n    .main-container {\\n        /* max-width: 400px; */\\n        min-width: 0px;\\n        height: 85vh;\\n        margin: 10px;\\n        gap: 5px;\\n        justify-content: center;\\n    }\\n\\n    .header {\\n        /* height: 10vh; */\\n        justify-content: center;\\n        align-items: center;\\n        flex-direction: column;\\n        height: 150px;\\n    }\\n\\n    .convert-temp-btn {\\n\\n       \\n        width: 100px;\\n\\n    }\\n\\n\\n    .search-bar {\\n        margin-left: inherit;\\n        width: 200px;\\n     \\n\\n\\n    }\\n\\n    .search-btn {\\n        font-size: var(--font-size-large);\\n        border-radius: var(--general-border-radius);\\n        width: 100px;\\n      \\n    }\\n\\n    .middle-section {\\n        width: 100%;\\n        height: 500px;\\n\\n    }\\n\\n\\n    .todays-weather-container {\\n\\n        width: 70%;\\n        justify-content: center;\\n        align-items: center;\\n\\n    }\\n\\n    .weather-container-header {\\n        display: flex;\\n        width: 100%;\\n        gap: var(--standard-gap);\\n        flex-direction: column;\\n        align-items: center;\\n        justify-content: center;\\n    }\\n\\n    .todays-weather-location {\\n    \\n        text-align: center;\\n        overflow: hidden;\\n        text-overflow: ellipsis;\\n        width: 90%;\\n\\n    }\\n\\n    .todays-weather-localtime {\\n\\n        margin-left: inherit;\\n        font-size: var(--font-size-large);\\n        white-space: nowrap;\\n    }\\n\\n    .weather-container-second-row {\\n    \\n        flex-direction: column;\\n      \\n        justify-content: left;\\n        align-items: center;\\n    }\\n\\n    \\n    \\n\\n    .condition-row {\\n       \\n        justify-content: space-around;\\n    \\n\\n\\n      \\n    }\\n\\n\\n    .weather-like{\\n       \\n        /* height: 40px; */\\n       \\n        padding: 3px;\\n        font-size: var(--font-size-medium);\\n        top: 90%;\\n        left: 26%;\\n        \\n    }\\n    \\n\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = [];\n\n  // return the list of modules as css string\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n      content += cssWithMappingToString(item);\n      if (needLayer) {\n        content += \"}\";\n      }\n      if (item[2]) {\n        content += \"}\";\n      }\n      if (item[4]) {\n        content += \"}\";\n      }\n      return content;\n    }).join(\"\");\n  };\n\n  // import a list of modules into the list\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n    var alreadyImportedModules = {};\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n      list.push(item);\n    }\n  };\n  return list;\n};","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n  if (!url) {\n    return url;\n  }\n  url = String(url.__esModule ? url.default : url);\n\n  // If url is already wrapped in quotes, remove them\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n  if (options.hash) {\n    url += options.hash;\n  }\n\n  // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n  return url;\n};","\"use strict\";\n\nmodule.exports = function (item) {\n  var content = item[1];\n  var cssMapping = item[3];\n  if (!cssMapping) {\n    return content;\n  }\n  if (typeof btoa === \"function\") {\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    return [content].concat([sourceMapping]).join(\"\\n\");\n  }\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\nvar stylesInDOM = [];\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n    identifiers.push(identifier);\n  }\n  return identifiers;\n}\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n  return updater;\n}\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n    var newLastIdentifiers = modulesToDom(newList, options);\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n      var _index = getIndexByIdentifier(_identifier);\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n    lastIdentifiers = newLastIdentifiers;\n  };\n};","\"use strict\";\n\nvar memo = {};\n\n/* istanbul ignore next  */\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target);\n\n    // Special case to return head of iframe instead of iframe itself\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n    memo[target] = styleTarget;\n  }\n  return memo[target];\n}\n\n/* istanbul ignore next  */\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n  target.appendChild(style);\n}\nmodule.exports = insertBySelector;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\nmodule.exports = insertStyleElement;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\nmodule.exports = setAttributesWithoutAttributes;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n  var needLayer = typeof obj.layer !== \"undefined\";\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n  css += obj.css;\n  if (needLayer) {\n    css += \"}\";\n  }\n  if (obj.media) {\n    css += \"}\";\n  }\n  if (obj.supports) {\n    css += \"}\";\n  }\n  var sourceMap = obj.sourceMap;\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  }\n\n  // For old IE\n  /* istanbul ignore if  */\n  options.styleTagTransform(css, styleElement, options.options);\n}\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n  styleElement.parentNode.removeChild(styleElement);\n}\n\n/* istanbul ignore next  */\nfunction domAPI(options) {\n  if (typeof document === \"undefined\") {\n    return {\n      update: function update() {},\n      remove: function remove() {}\n    };\n  }\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\nmodule.exports = domAPI;","\"use strict\";\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\nmodule.exports = styleTagTransform;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","__webpack_require__.nc = undefined;","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./styles.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./styles.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import { isAfter,isMatch, isValid } from \"date-fns\";\n\nfunction getDate(vizCrossingdate){\n\n    // '06:37:12'\n    const hr = vizCrossingdate.slice(0,2);\n\n    const minute = vizCrossingdate.slice(3,5);\n\n    const second = vizCrossingdate.slice(6,8);\n\n    const now = new Date();\n    return new Date(now.getFullYear(),now.getMonth(),now.getDate(),hr,minute,second)\n\n}\n\nfunction toCSSURL(url){\n    return `url(\"${url}\")`;\n}\n\nexport {getDate,toCSSURL}","import {getDate} from \"./general-functions.js\"\n\nclass Weather{\n\n    constructor(data,unitsType){\n\n        this.fullName = data.resolvedAddress;\n        this.temp = data.currentConditions.temp;\n        this.high = data.days[0].tempmax;\n        this.low = data.days[0].tempmin;\n        this.conditions = data.currentConditions.conditions;\n        this.precip = data.currentConditions.preciptype;\n        this.humidity = data.currentConditions.humidity;\n        this.windSpeed = data.currentConditions.windspeed;\n        this.description = data.description;\n        this.days = data.days;\n\n        this.datetime = getDate(data.currentConditions.datetime);\n        this.sunset = getDate(data.currentConditions.sunset);\n        this.sunrise = getDate(data.currentConditions.sunrise);\n        this.similarToPlanet = null;\n        \n        this.units = unitsType;\n        switch(this.units){\n            case 'us':\n                this.tempUnits = 'F';\n                break;\n            case 'uk':\n                this.tempUnits = 'C';\n                break;\n\n        }\n        \n        \n    }\n\n    get info(){\n        console.table(this);\n    }\n\n    print7DayForecast(){\n        for(let d = 0; d < 7; d++){\n            const day = this.days[d];\n            console.log(`${day.datetime}, Conditions: ${day.conditions} High ${Math.round(day.tempmax)} Low ${Math.round(day.tempmin)}`)\n        }\n    }\n\n    fahrenheitToCelsius(f){\n        return Math.round( (f - 32) * (5 / 9) * 10) / 10;\n    }\n\n    celsiusToFahrenheit(c){\n        return Math.round( (c * (9 / 5) + 32) * 10 ) / 10;\n    }\n\n    convertToFahrenheit(){\n\n        switch(this.tempUnits){\n            case 'F': \n                console.log(\"Units should already be F\");\n                break;\n            case 'C':\n                console.log(\"converting units from C to F\");\n                this.temp = this.celsiusToFahrenheit(this.temp);\n                this.high = this.celsiusToFahrenheit(this.high);\n                this.low = this.celsiusToFahrenheit(this.low);\n\n                for(let d = 0; d < 7; d++){\n                    const day = this.days[d];\n                    day.tempmax = this.celsiusToFahrenheit(day.tempmax);\n                    day.tempmin = this.celsiusToFahrenheit(day.tempmin);\n                }\n            \n                break;\n\n        }\n        this.tempUnits = 'F';\n    }\n\n    \n\n    convertToCelsius(){\n\n        switch(this.tempUnits){\n            case 'F': \n                console.log(\"converting units from F to C. \");\n                this.temp = this.fahrenheitToCelsius(this.temp);\n                this.high = this.fahrenheitToCelsius(this.high);\n                this.low = this.fahrenheitToCelsius(this.low);\n                for(let d = 0; d < 7; d++){\n                    const day = this.days[d];\n                    day.tempmax = this.fahrenheitToCelsius(day.tempmax);\n                    day.tempmin = this.fahrenheitToCelsius(day.tempmin);\n                }\n                break;\n            case 'C':\n                console.log(\"Units should already be C\");\n                break;               \n\n        }\n        this.tempUnits = 'C';\n    }\n\n    \n    \n}\n\nexport {Weather};","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { isDate } from \"./isDate.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  if (!isDate(date) && typeof date !== \"number\") {\n    return false;\n  }\n  const _date = toDate(date);\n  return !isNaN(Number(_date));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from 'date-fns'\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use contrustor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   )\n * }\n */\nexport function constructFrom(date, value) {\n  if (date instanceof Date) {\n    return new date.constructor(value);\n  } else {\n    return new Date(value);\n  }\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","import { getDefaultOptions as getInternalDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * @name getDefaultOptions\n * @category Common Helpers\n * @summary Get default options.\n * @pure false\n *\n * @description\n * Returns an object that contains defaults for\n * `options.locale`, `options.weekStartsOn` and `options.firstWeekContainsDate`\n * arguments for all functions.\n *\n * You can change these with [setDefaultOptions](https://date-fns.org/docs/setDefaultOptions).\n *\n * @returns The default options\n *\n * @example\n * const result = getDefaultOptions()\n * //=> {}\n *\n * @example\n * setDefaultOptions({ weekStarsOn: 1, firstWeekContainsDate: 4 })\n * const result = getDefaultOptions()\n * //=> { weekStarsOn: 1, firstWeekContainsDate: 4 }\n */\nexport function getDefaultOptions() {\n  return Object.assign({}, getInternalDefaultOptions());\n}\n\n// Fallback for modularized imports:\nexport default getDefaultOptions;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/* eslint-disable no-unused-vars */\n\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./en-US/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.mjs\";\nimport { localize } from \"./en-US/_lib/localize.mjs\";\nimport { match } from \"./en-US/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { transpose } from \"../../transpose.mjs\";\nimport { constructFrom } from \"../../constructFrom.mjs\";\n\nconst TIMEZONE_UNIT_PRIORITY = 10;\n\nexport class Setter {\n  subPriority = 0;\n\n  validate(_utcDate, _options) {\n    return true;\n  }\n}\n\nexport class ValueSetter extends Setter {\n  constructor(\n    value,\n\n    validateValue,\n\n    setValue,\n\n    priority,\n    subPriority,\n  ) {\n    super();\n    this.value = value;\n    this.validateValue = validateValue;\n    this.setValue = setValue;\n    this.priority = priority;\n    if (subPriority) {\n      this.subPriority = subPriority;\n    }\n  }\n\n  validate(date, options) {\n    return this.validateValue(date, this.value, options);\n  }\n\n  set(date, flags, options) {\n    return this.setValue(date, flags, this.value, options);\n  }\n}\n\nexport class DateToSystemTimezoneSetter extends Setter {\n  priority = TIMEZONE_UNIT_PRIORITY;\n  subPriority = -1;\n  set(date, flags) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(date, transpose(date, Date));\n  }\n}\n","import { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name transpose\n * @category Generic Helpers\n * @summary Transpose the date to the given constructor.\n *\n * @description\n * The function transposes the date to the given constructor. It helps you\n * to transpose the date in the system time zone to say `UTCDate` or any other\n * date extension.\n *\n * @typeParam DateInputType - The input `Date` type derived from the passed argument.\n * @typeParam DateOutputType - The output `Date` type derived from the passed constructor.\n *\n * @param fromDate - The date to use values from\n * @param constructor - The date constructor to use\n *\n * @returns Date transposed to the given constructor\n *\n * @example\n * // Create July 10, 2022 00:00 in locale time zone\n * const date = new Date(2022, 6, 10)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0800 (Singapore Standard Time)'\n *\n * @example\n * // Transpose the date to July 10, 2022 00:00 in UTC\n * transpose(date, UTCDate)\n * //=> 'Sun Jul 10 2022 00:00:00 GMT+0000 (Coordinated Universal Time)'\n */\nexport function transpose(fromDate, constructor) {\n  const date =\n    constructor instanceof Date\n      ? constructFrom(constructor, 0)\n      : new constructor(0);\n  date.setFullYear(\n    fromDate.getFullYear(),\n    fromDate.getMonth(),\n    fromDate.getDate(),\n  );\n  date.setHours(\n    fromDate.getHours(),\n    fromDate.getMinutes(),\n    fromDate.getSeconds(),\n    fromDate.getMilliseconds(),\n  );\n  return date;\n}\n\n// Fallback for modularized imports:\nexport default transpose;\n","import { ValueSetter } from \"./Setter.mjs\";\n\nexport class Parser {\n  run(dateString, token, match, options) {\n    const result = this.parse(dateString, token, match, options);\n    if (!result) {\n      return null;\n    }\n\n    return {\n      setter: new ValueSetter(\n        result.value,\n        this.validate,\n        this.set,\n        this.priority,\n        this.subPriority,\n      ),\n      rest: result.rest,\n    };\n  }\n\n  validate(_utcDate, _value, _options) {\n    return true;\n  }\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n","export const numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/, // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/, // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/, // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/, // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/, // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/, // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/, // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/, // 0 to 12\n  minute: /^[0-5]?\\d/, // 0 to 59\n  second: /^[0-5]?\\d/, // 0 to 59\n\n  singleDigit: /^\\d/, // 0 to 9\n  twoDigits: /^\\d{1,2}/, // 0 to 99\n  threeDigits: /^\\d{1,3}/, // 0 to 999\n  fourDigits: /^\\d{1,4}/, // 0 to 9999\n\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/, // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/, // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/, // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/, // 0 to 9999, -0 to -9999\n};\n\nexport const timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/,\n};\n","import {\n  millisecondsInHour,\n  millisecondsInMinute,\n  millisecondsInSecond,\n} from \"../../constants.mjs\";\nimport { numericPatterns } from \"./constants.mjs\";\n\nexport function mapValue(parseFnResult, mapFn) {\n  if (!parseFnResult) {\n    return parseFnResult;\n  }\n\n  return {\n    value: mapFn(parseFnResult.value),\n    rest: parseFnResult.rest,\n  };\n}\n\nexport function parseNumericPattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  return {\n    value: parseInt(matchResult[0], 10),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseTimezonePattern(pattern, dateString) {\n  const matchResult = dateString.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  // Input is 'Z'\n  if (matchResult[0] === \"Z\") {\n    return {\n      value: 0,\n      rest: dateString.slice(1),\n    };\n  }\n\n  const sign = matchResult[1] === \"+\" ? 1 : -1;\n  const hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  const minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  const seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n\n  return {\n    value:\n      sign *\n      (hours * millisecondsInHour +\n        minutes * millisecondsInMinute +\n        seconds * millisecondsInSecond),\n    rest: dateString.slice(matchResult[0].length),\n  };\n}\n\nexport function parseAnyDigitsSigned(dateString) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, dateString);\n}\n\nexport function parseNDigits(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function parseNDigitsSigned(n, dateString) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, dateString);\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, dateString);\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, dateString);\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, dateString);\n    default:\n      return parseNumericPattern(new RegExp(\"^-?\\\\d{1,\" + n + \"}\"), dateString);\n  }\n}\n\nexport function dayPeriodEnumToHours(dayPeriod) {\n  switch (dayPeriod) {\n    case \"morning\":\n      return 4;\n    case \"evening\":\n      return 17;\n    case \"pm\":\n    case \"noon\":\n    case \"afternoon\":\n      return 12;\n    case \"am\":\n    case \"midnight\":\n    case \"night\":\n    default:\n      return 0;\n  }\n}\n\nexport function normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  const isCommonEra = currentYear > 0;\n  // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n  const absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n\n  let result;\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    const rangeEnd = absCurrentYear + 50;\n    const rangeEndCentury = Math.trunc(rangeEnd / 100) * 100;\n    const isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nexport function isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { startOfWeek } from \"./startOfWeek.mjs\";\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date) {\n  return startOfWeek(date, { weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { startOfWeekYear } from \"./startOfWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport function getWeek(date, options) {\n  const _date = toDate(date);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getWeekYear } from \"./getWeekYear.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date) {\n  const _date = toDate(date);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date) {\n  const year = getISOWeekYear(date);\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.mjs\";\n\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst DAYS_IN_MONTH_LEAP_YEAR = [\n  31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31,\n];\n\n// Day of the month\nexport class DateParser extends Parser {\n  priority = 90;\n  subPriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"d\":\n        return parseNumericPattern(numericPatterns.date, dateString);\n      case \"do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    const month = date.getMonth();\n    if (isLeapYear) {\n      return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n    } else {\n      return value >= 1 && value <= DAYS_IN_MONTH[month];\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setDate(value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","import { addDays } from \"./addDays.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link setDay} function options.\n */\n\n/**\n * @name setDay\n * @category Weekday Helpers\n * @summary Set the day of the week to the given date.\n *\n * @description\n * Set the day of the week to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param day - The day of the week of the new date\n * @param options - An object with options.\n *\n * @returns The new date with the day of the week set\n *\n * @example\n * // Set week day to Sunday, with the default weekStartsOn of Sunday:\n * const result = setDay(new Date(2014, 8, 1), 0)\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // Set week day to Sunday, with a weekStartsOn of Monday:\n * const result = setDay(new Date(2014, 8, 1), 0, { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setDay(date, day, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const currentDay = _date.getDay();\n\n  const remainder = day % 7;\n  const dayIndex = (remainder + 7) % 7;\n\n  const delta = 7 - weekStartsOn;\n  const diff =\n    day < 0 || day > 6\n      ? day - ((currentDay + delta) % 7)\n      : ((dayIndex + delta) % 7) - ((currentDay + delta) % 7);\n  return addDays(_date, diff);\n}\n\n// Fallback for modularized imports:\nexport default setDay;\n","import { addDays } from \"./addDays.mjs\";\nimport { getISODay } from \"./getISODay.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name setISODay\n * @category Weekday Helpers\n * @summary Set the day of the ISO week to the given date.\n *\n * @description\n * Set the day of the ISO week to the given date.\n * ISO week starts with Monday.\n * 7 is the index of Sunday, 1 is the index of Monday etc.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param day - The day of the ISO week of the new date\n *\n * @returns The new date with the day of the ISO week set\n *\n * @example\n * // Set Sunday to 1 September 2014:\n * const result = setISODay(new Date(2014, 8, 1), 7)\n * //=> Sun Sep 07 2014 00:00:00\n */\nexport function setISODay(date, day) {\n  const _date = toDate(date);\n  const currentDay = getISODay(_date);\n  const diff = day - currentDay;\n  return addDays(_date, diff);\n}\n\n// Fallback for modularized imports:\nexport default setISODay;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISODay\n * @category Weekday Helpers\n * @summary Get the day of the ISO week of the given date.\n *\n * @description\n * Get the day of the ISO week of the given date,\n * which is 7 for Sunday, 1 for Monday etc.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of ISO week\n *\n * @example\n * // Which day of the ISO week is 26 February 2012?\n * const result = getISODay(new Date(2012, 1, 26))\n * //=> 7\n */\nexport function getISODay(date) {\n  const _date = toDate(date);\n  let day = _date.getDay();\n\n  if (day === 0) {\n    day = 7;\n  }\n\n  return day;\n}\n\n// Fallback for modularized imports:\nexport default getISODay;\n","import { toDate } from \"../toDate.mjs\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { EraParser } from \"./parsers/EraParser.mjs\";\nimport { YearParser } from \"./parsers/YearParser.mjs\";\nimport { LocalWeekYearParser } from \"./parsers/LocalWeekYearParser.mjs\";\nimport { ISOWeekYearParser } from \"./parsers/ISOWeekYearParser.mjs\";\nimport { ExtendedYearParser } from \"./parsers/ExtendedYearParser.mjs\";\nimport { QuarterParser } from \"./parsers/QuarterParser.mjs\";\nimport { StandAloneQuarterParser } from \"./parsers/StandAloneQuarterParser.mjs\";\nimport { MonthParser } from \"./parsers/MonthParser.mjs\";\nimport { StandAloneMonthParser } from \"./parsers/StandAloneMonthParser.mjs\";\nimport { LocalWeekParser } from \"./parsers/LocalWeekParser.mjs\";\nimport { ISOWeekParser } from \"./parsers/ISOWeekParser.mjs\";\nimport { DateParser } from \"./parsers/DateParser.mjs\";\nimport { DayOfYearParser } from \"./parsers/DayOfYearParser.mjs\";\nimport { DayParser } from \"./parsers/DayParser.mjs\";\nimport { LocalDayParser } from \"./parsers/LocalDayParser.mjs\";\nimport { StandAloneLocalDayParser } from \"./parsers/StandAloneLocalDayParser.mjs\";\nimport { ISODayParser } from \"./parsers/ISODayParser.mjs\";\nimport { AMPMParser } from \"./parsers/AMPMParser.mjs\";\nimport { AMPMMidnightParser } from \"./parsers/AMPMMidnightParser.mjs\";\nimport { DayPeriodParser } from \"./parsers/DayPeriodParser.mjs\";\nimport { Hour1to12Parser } from \"./parsers/Hour1to12Parser.mjs\";\nimport { Hour0to23Parser } from \"./parsers/Hour0to23Parser.mjs\";\nimport { Hour0To11Parser } from \"./parsers/Hour0To11Parser.mjs\";\nimport { Hour1To24Parser } from \"./parsers/Hour1To24Parser.mjs\";\nimport { MinuteParser } from \"./parsers/MinuteParser.mjs\";\nimport { SecondParser } from \"./parsers/SecondParser.mjs\";\nimport { FractionOfSecondParser } from \"./parsers/FractionOfSecondParser.mjs\";\nimport { ISOTimezoneWithZParser } from \"./parsers/ISOTimezoneWithZParser.mjs\";\nimport { ISOTimezoneParser } from \"./parsers/ISOTimezoneParser.mjs\";\nimport { TimestampSecondsParser } from \"./parsers/TimestampSecondsParser.mjs\";\nimport { TimestampMillisecondsParser } from \"./parsers/TimestampMillisecondsParser.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any -- It's ok, we want any here\nexport const parsers = {\n  G: new EraParser(),\n  y: new YearParser(),\n  Y: new LocalWeekYearParser(),\n  R: new ISOWeekYearParser(),\n  u: new ExtendedYearParser(),\n  Q: new QuarterParser(),\n  q: new StandAloneQuarterParser(),\n  M: new MonthParser(),\n  L: new StandAloneMonthParser(),\n  w: new LocalWeekParser(),\n  I: new ISOWeekParser(),\n  d: new DateParser(),\n  D: new DayOfYearParser(),\n  E: new DayParser(),\n  e: new LocalDayParser(),\n  c: new StandAloneLocalDayParser(),\n  i: new ISODayParser(),\n  a: new AMPMParser(),\n  b: new AMPMMidnightParser(),\n  B: new DayPeriodParser(),\n  h: new Hour1to12Parser(),\n  H: new Hour0to23Parser(),\n  K: new Hour0To11Parser(),\n  k: new Hour1To24Parser(),\n  m: new MinuteParser(),\n  s: new SecondParser(),\n  S: new FractionOfSecondParser(),\n  X: new ISOTimezoneWithZParser(),\n  x: new ISOTimezoneParser(),\n  t: new TimestampSecondsParser(),\n  T: new TimestampMillisecondsParser(),\n};\n","import { Parser } from \"../Parser.mjs\";\n\nexport class EraParser extends Parser {\n  priority = 140;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return (\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n\n      // A, B\n      case \"GGGGG\":\n        return match.era(dateString, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return (\n          match.era(dateString, { width: \"wide\" }) ||\n          match.era(dateString, { width: \"abbreviated\" }) ||\n          match.era(dateString, { width: \"narrow\" })\n        );\n    }\n  }\n\n  set(date, flags, value) {\n    flags.era = value;\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"R\", \"u\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.mjs\";\n\n// From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n// | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n// |----------|-------|----|-------|-------|-------|\n// | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n// | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n// | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n// | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n// | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\nexport class YearParser extends Parser {\n  priority = 130;\n  incompatibleTokens = [\"Y\", \"R\", \"u\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"yy\",\n    });\n\n    switch (token) {\n      case \"y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value) {\n    const currentYear = date.getFullYear();\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(normalizedTwoDigitYear, 0, 1);\n      date.setHours(0, 0, 0, 0);\n      return date;\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n","import { getWeekYear } from \"../../../getWeekYear.mjs\";\nimport { startOfWeek } from \"../../../startOfWeek.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, normalizeTwoDigitYear, parseNDigits } from \"../utils.mjs\";\n\n// Local week-numbering year\nexport class LocalWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token, match) {\n    const valueCallback = (year) => ({\n      year,\n      isTwoDigitYear: token === \"YY\",\n    });\n\n    switch (token) {\n      case \"Y\":\n        return mapValue(parseNDigits(4, dateString), valueCallback);\n      case \"Yo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"year\",\n          }),\n          valueCallback,\n        );\n      default:\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n    }\n  }\n\n  validate(_date, value) {\n    return value.isTwoDigitYear || value.year > 0;\n  }\n\n  set(date, flags, value, options) {\n    const currentYear = getWeekYear(date, options);\n\n    if (value.isTwoDigitYear) {\n      const normalizedTwoDigitYear = normalizeTwoDigitYear(\n        value.year,\n        currentYear,\n      );\n      date.setFullYear(\n        normalizedTwoDigitYear,\n        0,\n        options.firstWeekContainsDate,\n      );\n      date.setHours(0, 0, 0, 0);\n      return startOfWeek(date, options);\n    }\n\n    const year =\n      !(\"era\" in flags) || flags.era === 1 ? value.year : 1 - value.year;\n    date.setFullYear(year, 0, options.firstWeekContainsDate);\n    date.setHours(0, 0, 0, 0);\n    return startOfWeek(date, options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { startOfISOWeek } from \"../../../startOfISOWeek.mjs\";\nimport { constructFrom } from \"../../../constructFrom.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigitsSigned } from \"../utils.mjs\";\n\n// ISO week-numbering year\nexport class ISOWeekYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"R\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    const firstWeekOfYear = constructFrom(date, 0);\n    firstWeekOfYear.setFullYear(value, 0, 4);\n    firstWeekOfYear.setHours(0, 0, 0, 0);\n    return startOfISOWeek(firstWeekOfYear);\n  }\n\n  incompatibleTokens = [\n    \"G\",\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"Q\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { parseNDigitsSigned } from \"../utils.mjs\";\n\nexport class ExtendedYearParser extends Parser {\n  priority = 130;\n\n  parse(dateString, token) {\n    if (token === \"u\") {\n      return parseNDigitsSigned(4, dateString);\n    }\n\n    return parseNDigitsSigned(token.length, dateString);\n  }\n\n  set(date, _flags, value) {\n    date.setFullYear(value, 0, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"G\", \"y\", \"Y\", \"R\", \"w\", \"I\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { parseNDigits } from \"../utils.mjs\";\n\nexport class QuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n      case \"QQ\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { parseNDigits } from \"../utils.mjs\";\n\nexport class StandAloneQuarterParser extends Parser {\n  priority = 120;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n      case \"qq\": // 01, 02, 03, 04\n        return parseNDigits(token.length, dateString);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return match.ordinalNumber(dateString, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return (\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return match.quarter(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return (\n          match.quarter(dateString, {\n            width: \"wide\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.quarter(dateString, {\n            width: \"narrow\",\n            context: \"standalone\",\n          })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 4;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth((value - 1) * 3, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class MonthParser extends Parser {\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"M\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"MM\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // J, F, ..., D\n      case \"MMMMM\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class StandAloneMonthParser extends Parser {\n  priority = 110;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => value - 1;\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return mapValue(\n          parseNumericPattern(numericPatterns.month, dateString),\n          valueCallback,\n        );\n      // 01, 02, ..., 12\n      case \"LL\":\n        return mapValue(parseNDigits(2, dateString), valueCallback);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"month\",\n          }),\n          valueCallback,\n        );\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return (\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // J, F, ..., D\n      case \"LLLLL\":\n        return match.month(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return (\n          match.month(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.month(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.month(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(value, 1);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"w\",\n    \"I\",\n    \"D\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setWeek } from \"../../../setWeek.mjs\";\nimport { startOfWeek } from \"../../../startOfWeek.mjs\";\nimport { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\n// Local week of year\nexport class LocalWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"w\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"wo\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value, options) {\n    return startOfWeek(setWeek(date, value, options), options);\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"i\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { getWeek } from \"./getWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link setWeek} function options.\n */\n\n/**\n * @name setWeek\n * @category Week Helpers\n * @summary Set the local week to the given date.\n *\n * @description\n * Set the local week to the given date, saving the weekday number.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param week - The week of the new date\n * @param options - An object with options\n *\n * @returns The new date with the local week set\n *\n * @example\n * // Set the 1st week to 2 January 2005 with default options:\n * const result = setWeek(new Date(2005, 0, 2), 1)\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // Set the 1st week to 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January:\n * const result = setWeek(new Date(2005, 0, 2), 1, {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Sun Jan 4 2004 00:00:00\n */\nexport function setWeek(date, week, options) {\n  const _date = toDate(date);\n  const diff = getWeek(_date, options) - week;\n  _date.setDate(_date.getDate() - diff * 7);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setWeek;\n","import { setISOWeek } from \"../../../setISOWeek.mjs\";\nimport { startOfISOWeek } from \"../../../startOfISOWeek.mjs\";\nimport { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\n// ISO week of year\nexport class ISOWeekParser extends Parser {\n  priority = 100;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"I\":\n        return parseNumericPattern(numericPatterns.week, dateString);\n      case \"Io\":\n        return match.ordinalNumber(dateString, { unit: \"week\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 53;\n  }\n\n  set(date, _flags, value) {\n    return startOfISOWeek(setISOWeek(date, value));\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { getISOWeek } from \"./getISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name setISOWeek\n * @category ISO Week Helpers\n * @summary Set the ISO week to the given date.\n *\n * @description\n * Set the ISO week to the given date, saving the weekday number.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param week - The ISO week of the new date\n *\n * @returns The new date with the ISO week set\n *\n * @example\n * // Set the 53rd ISO week to 7 August 2004:\n * const result = setISOWeek(new Date(2004, 7, 7), 53)\n * //=> Sat Jan 01 2005 00:00:00\n */\nexport function setISOWeek(date, week) {\n  const _date = toDate(date);\n  const diff = getISOWeek(_date) - week;\n  _date.setDate(_date.getDate() - diff * 7);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default setISOWeek;\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport {\n  isLeapYearIndex,\n  parseNDigits,\n  parseNumericPattern,\n} from \"../utils.mjs\";\n\nexport class DayOfYearParser extends Parser {\n  priority = 90;\n\n  subpriority = 1;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"D\":\n      case \"DD\":\n        return parseNumericPattern(numericPatterns.dayOfYear, dateString);\n      case \"Do\":\n        return match.ordinalNumber(dateString, { unit: \"date\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(date, value) {\n    const year = date.getFullYear();\n    const isLeapYear = isLeapYearIndex(year);\n    if (isLeapYear) {\n      return value >= 1 && value <= 366;\n    } else {\n      return value >= 1 && value <= 365;\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setMonth(0, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"Y\",\n    \"R\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"I\",\n    \"d\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setDay } from \"../../../setDay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\n\n// Day of week\nexport class DayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"EEEEE\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"D\", \"i\", \"e\", \"c\", \"t\", \"T\"];\n}\n","import { setDay } from \"../../../setDay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// Local day of week\nexport class LocalDayParser extends Parser {\n  priority = 90;\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      // We want here floor instead of trunc, so we get -7 for value 0 instead of 0\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"e\":\n      case \"ee\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"eo\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"eee\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // T\n      case \"eeeee\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n\n      // Tuesday\n      case \"eeee\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"formatting\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"formatting\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"formatting\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setDay } from \"../../../setDay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// Stand-alone local day of week\nexport class StandAloneLocalDayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match, options) {\n    const valueCallback = (value) => {\n      // We want here floor instead of trunc, so we get -7 for value 0 instead of 0\n      const wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n      return ((value + options.weekStartsOn + 6) % 7) + wholeWeekDays;\n    };\n\n    switch (token) {\n      // 3\n      case \"c\":\n      case \"cc\": // 03\n        return mapValue(parseNDigits(token.length, dateString), valueCallback);\n      // 3rd\n      case \"co\":\n        return mapValue(\n          match.ordinalNumber(dateString, {\n            unit: \"day\",\n          }),\n          valueCallback,\n        );\n      // Tue\n      case \"ccc\":\n        return (\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // T\n      case \"ccccc\":\n        return match.day(dateString, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return (\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n\n      // Tuesday\n      case \"cccc\":\n      default:\n        return (\n          match.day(dateString, { width: \"wide\", context: \"standalone\" }) ||\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"standalone\",\n          }) ||\n          match.day(dateString, { width: \"short\", context: \"standalone\" }) ||\n          match.day(dateString, { width: \"narrow\", context: \"standalone\" })\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 6;\n  }\n\n  set(date, _flags, value, options) {\n    date = setDay(date, value, options);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"R\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"I\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"i\",\n    \"e\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { setISODay } from \"../../../setISODay.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\n// ISO day of week\nexport class ISODayParser extends Parser {\n  priority = 90;\n\n  parse(dateString, token, match) {\n    const valueCallback = (value) => {\n      if (value === 0) {\n        return 7;\n      }\n      return value;\n    };\n\n    switch (token) {\n      // 2\n      case \"i\":\n      case \"ii\": // 02\n        return parseNDigits(token.length, dateString);\n      // 2nd\n      case \"io\":\n        return match.ordinalNumber(dateString, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // T\n      case \"iiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          }),\n          valueCallback,\n        );\n      // Tu\n      case \"iiiiii\":\n        return mapValue(\n          match.day(dateString, {\n            width: \"short\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n      // Tuesday\n      case \"iiii\":\n      default:\n        return mapValue(\n          match.day(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n            match.day(dateString, {\n              width: \"abbreviated\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"short\",\n              context: \"formatting\",\n            }) ||\n            match.day(dateString, {\n              width: \"narrow\",\n              context: \"formatting\",\n            }),\n          valueCallback,\n        );\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 7;\n  }\n\n  set(date, _flags, value) {\n    date = setISODay(date, value);\n    date.setHours(0, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\n    \"y\",\n    \"Y\",\n    \"u\",\n    \"q\",\n    \"Q\",\n    \"M\",\n    \"L\",\n    \"w\",\n    \"d\",\n    \"D\",\n    \"E\",\n    \"e\",\n    \"c\",\n    \"t\",\n    \"T\",\n  ];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\nexport class AMPMParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n      case \"aaa\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"aaaaa\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"b\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\nexport class AMPMMidnightParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n      case \"bbb\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"bbbbb\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"B\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { dayPeriodEnumToHours } from \"../utils.mjs\";\n\n// in the morning, in the afternoon, in the evening, at night\nexport class DayPeriodParser extends Parser {\n  priority = 80;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return (\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n\n      case \"BBBBB\":\n        return match.dayPeriod(dateString, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return (\n          match.dayPeriod(dateString, {\n            width: \"wide\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          }) ||\n          match.dayPeriod(dateString, {\n            width: \"narrow\",\n            context: \"formatting\",\n          })\n        );\n    }\n  }\n\n  set(date, _flags, value) {\n    date.setHours(dayPeriodEnumToHours(value), 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour1to12Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"h\":\n        return parseNumericPattern(numericPatterns.hour12h, dateString);\n      case \"ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 12;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else if (!isPM && value === 12) {\n      date.setHours(0, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"H\", \"K\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour0to23Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"H\":\n        return parseNumericPattern(numericPatterns.hour23h, dateString);\n      case \"Ho\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 23;\n  }\n\n  set(date, _flags, value) {\n    date.setHours(value, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"K\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour0To11Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"K\":\n        return parseNumericPattern(numericPatterns.hour11h, dateString);\n      case \"Ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 11;\n  }\n\n  set(date, _flags, value) {\n    const isPM = date.getHours() >= 12;\n    if (isPM && value < 12) {\n      date.setHours(value + 12, 0, 0, 0);\n    } else {\n      date.setHours(value, 0, 0, 0);\n    }\n    return date;\n  }\n\n  incompatibleTokens = [\"h\", \"H\", \"k\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class Hour1To24Parser extends Parser {\n  priority = 70;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"k\":\n        return parseNumericPattern(numericPatterns.hour24h, dateString);\n      case \"ko\":\n        return match.ordinalNumber(dateString, { unit: \"hour\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 1 && value <= 24;\n  }\n\n  set(date, _flags, value) {\n    const hours = value <= 24 ? value % 24 : value;\n    date.setHours(hours, 0, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"a\", \"b\", \"h\", \"H\", \"K\", \"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class MinuteParser extends Parser {\n  priority = 60;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"m\":\n        return parseNumericPattern(numericPatterns.minute, dateString);\n      case \"mo\":\n        return match.ordinalNumber(dateString, { unit: \"minute\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setMinutes(value, 0, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { numericPatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseNDigits, parseNumericPattern } from \"../utils.mjs\";\n\nexport class SecondParser extends Parser {\n  priority = 50;\n\n  parse(dateString, token, match) {\n    switch (token) {\n      case \"s\":\n        return parseNumericPattern(numericPatterns.second, dateString);\n      case \"so\":\n        return match.ordinalNumber(dateString, { unit: \"second\" });\n      default:\n        return parseNDigits(token.length, dateString);\n    }\n  }\n\n  validate(_date, value) {\n    return value >= 0 && value <= 59;\n  }\n\n  set(date, _flags, value) {\n    date.setSeconds(value, 0);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { Parser } from \"../Parser.mjs\";\nimport { mapValue, parseNDigits } from \"../utils.mjs\";\n\nexport class FractionOfSecondParser extends Parser {\n  priority = 30;\n\n  parse(dateString, token) {\n    const valueCallback = (value) =>\n      Math.trunc(value * Math.pow(10, -token.length + 3));\n    return mapValue(parseNDigits(token.length, dateString), valueCallback);\n  }\n\n  set(date, _flags, value) {\n    date.setMilliseconds(value);\n    return date;\n  }\n\n  incompatibleTokens = [\"t\", \"T\"];\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.mjs\";\nimport { timezonePatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseTimezonePattern } from \"../utils.mjs\";\n\n// Timezone (ISO-8601. +00:00 is `'Z'`)\nexport class ISOTimezoneWithZParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"X\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"XX\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"XXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"XXXXX\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"XXX\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"x\"];\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"../../../_lib/getTimezoneOffsetInMilliseconds.mjs\";\nimport { timezonePatterns } from \"../constants.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseTimezonePattern } from \"../utils.mjs\";\n\n// Timezone (ISO-8601)\nexport class ISOTimezoneParser extends Parser {\n  priority = 10;\n\n  parse(dateString, token) {\n    switch (token) {\n      case \"x\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalMinutes,\n          dateString,\n        );\n      case \"xx\":\n        return parseTimezonePattern(timezonePatterns.basic, dateString);\n      case \"xxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.basicOptionalSeconds,\n          dateString,\n        );\n      case \"xxxxx\":\n        return parseTimezonePattern(\n          timezonePatterns.extendedOptionalSeconds,\n          dateString,\n        );\n      case \"xxx\":\n      default:\n        return parseTimezonePattern(timezonePatterns.extended, dateString);\n    }\n  }\n\n  set(date, flags, value) {\n    if (flags.timestampIsSet) return date;\n    return constructFrom(\n      date,\n      date.getTime() - getTimezoneOffsetInMilliseconds(date) - value,\n    );\n  }\n\n  incompatibleTokens = [\"t\", \"T\", \"X\"];\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseAnyDigitsSigned } from \"../utils.mjs\";\n\nexport class TimestampSecondsParser extends Parser {\n  priority = 40;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value * 1000), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n","import { constructFrom } from \"../../../constructFrom.mjs\";\nimport { Parser } from \"../Parser.mjs\";\nimport { parseAnyDigitsSigned } from \"../utils.mjs\";\n\nexport class TimestampMillisecondsParser extends Parser {\n  priority = 20;\n\n  parse(dateString) {\n    return parseAnyDigitsSigned(dateString);\n  }\n\n  set(date, _flags, value) {\n    return [constructFrom(date, value), { timestampIsSet: true }];\n  }\n\n  incompatibleTokens = \"*\";\n}\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getDefaultOptions } from \"./getDefaultOptions.mjs\";\nimport { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\nimport { parsers } from \"./parse/_lib/parsers.mjs\";\nimport { DateToSystemTimezoneSetter } from \"./parse/_lib/Setter.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { longFormatters, parsers };\n\n/**\n * The {@link parse} function options.\n */\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\n\nconst notWhitespaceRegExp = /\\S/;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 001, ..., 999                |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear](https://date-fns.org/docs/setISOWeekYear)\n *    and [setWeekYear](https://date-fns.org/docs/setWeekYear)).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateStr - The string to parse\n * @param formatStr - The string of tokens\n * @param referenceDate - defines values missing from the parsed dateString\n * @param options - An object with options.\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @returns The parsed date\n *\n * @throws `options.locale` must contain `match` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\nexport function parse(dateStr, formatStr, referenceDate, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  if (formatStr === \"\") {\n    if (dateStr === \"\") {\n      return toDate(referenceDate);\n    } else {\n      return constructFrom(referenceDate, NaN);\n    }\n  }\n\n  const subFnOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  // If timezone isn't specified, it will be set to the system timezone\n  const setters = [new DateToSystemTimezoneSetter()];\n\n  const tokens = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter in longFormatters) {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp);\n\n  const usedTokens = [];\n\n  for (let token of tokens) {\n    if (\n      !options?.useAdditionalWeekYearTokens &&\n      isProtectedWeekYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n    if (\n      !options?.useAdditionalDayOfYearTokens &&\n      isProtectedDayOfYearToken(token)\n    ) {\n      warnOrThrowProtectedError(token, formatStr, dateStr);\n    }\n\n    const firstCharacter = token[0];\n    const parser = parsers[firstCharacter];\n    if (parser) {\n      const { incompatibleTokens } = parser;\n      if (Array.isArray(incompatibleTokens)) {\n        const incompatibleToken = usedTokens.find(\n          (usedToken) =>\n            incompatibleTokens.includes(usedToken.token) ||\n            usedToken.token === firstCharacter,\n        );\n        if (incompatibleToken) {\n          throw new RangeError(\n            `The format string mustn't contain \\`${incompatibleToken.fullToken}\\` and \\`${token}\\` at the same time`,\n          );\n        }\n      } else if (parser.incompatibleTokens === \"*\" && usedTokens.length > 0) {\n        throw new RangeError(\n          `The format string mustn't contain \\`${token}\\` and any other token at the same time`,\n        );\n      }\n\n      usedTokens.push({ token: firstCharacter, fullToken: token });\n\n      const parseResult = parser.run(\n        dateStr,\n        token,\n        locale.match,\n        subFnOptions,\n      );\n\n      if (!parseResult) {\n        return constructFrom(referenceDate, NaN);\n      }\n\n      setters.push(parseResult.setter);\n\n      dateStr = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      // Replace two single quote characters with one single quote character\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      }\n\n      // Cut token from string, or, if string doesn't match the token, return Invalid Date\n      if (dateStr.indexOf(token) === 0) {\n        dateStr = dateStr.slice(token.length);\n      } else {\n        return constructFrom(referenceDate, NaN);\n      }\n    }\n  }\n\n  // Check if the remaining input contains something other than whitespace\n  if (dateStr.length > 0 && notWhitespaceRegExp.test(dateStr)) {\n    return constructFrom(referenceDate, NaN);\n  }\n\n  const uniquePrioritySetters = setters\n    .map((setter) => setter.priority)\n    .sort((a, b) => b - a)\n    .filter((priority, index, array) => array.indexOf(priority) === index)\n    .map((priority) =>\n      setters\n        .filter((setter) => setter.priority === priority)\n        .sort((a, b) => b.subPriority - a.subPriority),\n    )\n    .map((setterArray) => setterArray[0]);\n\n  let date = toDate(referenceDate);\n\n  if (isNaN(date.getTime())) {\n    return constructFrom(referenceDate, NaN);\n  }\n\n  const flags = {};\n  for (const setter of uniquePrioritySetters) {\n    if (!setter.validate(date, subFnOptions)) {\n      return constructFrom(referenceDate, NaN);\n    }\n\n    const result = setter.set(date, flags, subFnOptions);\n    // Result is tuple (date, flags)\n    if (Array.isArray(result)) {\n      date = result[0];\n      Object.assign(flags, result[1]);\n      // Result is date\n    } else {\n      date = result;\n    }\n  }\n\n  return constructFrom(referenceDate, date);\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default parse;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isBefore\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date that should be before the other one to return true\n * @param dateToCompare - The date to compare with\n *\n * @returns The first date is before the second date\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * const result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\nexport function isBefore(date, dateToCompare) {\n  const _date = toDate(date);\n  const _dateToCompare = toDate(dateToCompare);\n  return +_date < +_dateToCompare;\n}\n\n// Fallback for modularized imports:\nexport default isBefore;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isAfter\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date that should be after the other one to return true\n * @param dateToCompare - The date to compare with\n *\n * @returns The first date is after the second date\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * const result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\nexport function isAfter(date, dateToCompare) {\n  const _date = toDate(date);\n  const _dateToCompare = toDate(dateToCompare);\n  return _date.getTime() > _dateToCompare.getTime();\n}\n\n// Fallback for modularized imports:\nexport default isAfter;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { startOfYear } from \"./startOfYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date) {\n  const _date = toDate(date);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { millisecondsInDay } from \"./constants.mjs\";\nimport { startOfDay } from \"./startOfDay.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(dateLeft, dateRight) {\n  const startOfDayLeft = startOfDay(dateLeft);\n  const startOfDayRight = startOfDay(dateRight);\n\n  const timestampLeft =\n    +startOfDayLeft - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  const timestampRight =\n    +startOfDayRight - getTimezoneOffsetInMilliseconds(startOfDayRight);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((timestampLeft - timestampRight) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date) {\n  const cleanDate = toDate(date);\n  const _date = constructFrom(date, 0);\n  _date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.mjs\";\nimport { getISOWeek } from \"../../getISOWeek.mjs\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.mjs\";\nimport { getWeek } from \"../../getWeek.mjs\";\nimport { getWeekYear } from \"../../getWeekYear.mjs\";\nimport { addLeadingZeros } from \"../addLeadingZeros.mjs\";\nimport { lightFormatters } from \"./lightFormatters.mjs\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(date.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    const timestamp = date.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","import { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\nimport { formatters } from \"./_lib/format/formatters.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\nimport { isValid } from \"./isValid.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { addMonths } from \"./addMonths.mjs\";\n\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be subtracted.\n *\n * @returns The new date with the months subtracted\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function subMonths(date, amount) {\n  return addMonths(date, -amount);\n}\n\n// Fallback for modularized imports:\nexport default subMonths;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be added.\n *\n * @returns The new date with the months added\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n *\n * // Add one month to 30 January 2023:\n * const result = addMonths(new Date(2023, 0, 30), 1)\n * //=> Tue Feb 28 2023 00:00:00\n */\nexport function addMonths(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  const dayOfMonth = _date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  const endOfDesiredMonth = constructFrom(date, _date.getTime());\n  endOfDesiredMonth.setMonth(_date.getMonth() + amount + 1, 0);\n  const daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    _date.setFullYear(\n      endOfDesiredMonth.getFullYear(),\n      endOfDesiredMonth.getMonth(),\n      dayOfMonth,\n    );\n    return _date;\n  }\n}\n\n// Fallback for modularized imports:\nexport default addMonths;\n","import { subDays } from \"./subDays.mjs\";\nimport { subMonths } from \"./subMonths.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name sub\n * @category Common Helpers\n * @summary Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @description\n * Subtract the specified years, months, weeks, days, hours, minutes and seconds from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param duration - The object with years, months, weeks, days, hours, minutes and seconds to be subtracted\n *\n * | Key     | Description                        |\n * |---------|------------------------------------|\n * | years   | Amount of years to be subtracted   |\n * | months  | Amount of months to be subtracted  |\n * | weeks   | Amount of weeks to be subtracted   |\n * | days    | Amount of days to be subtracted    |\n * | hours   | Amount of hours to be subtracted   |\n * | minutes | Amount of minutes to be subtracted |\n * | seconds | Amount of seconds to be subtracted |\n *\n * All values default to 0\n *\n * @returns The new date with the seconds subtracted\n *\n * @example\n * // Subtract the following duration from 15 June 2017 15:29:20\n * const result = sub(new Date(2017, 5, 15, 15, 29, 20), {\n *   years: 2,\n *   months: 9,\n *   weeks: 1,\n *   days: 7,\n *   hours: 5,\n *   minutes: 9,\n *   seconds: 30\n * })\n * //=> Mon Sep 1 2014 10:19:50\n */\nexport function sub(date, duration) {\n  const {\n    years = 0,\n    months = 0,\n    weeks = 0,\n    days = 0,\n    hours = 0,\n    minutes = 0,\n    seconds = 0,\n  } = duration;\n\n  // Subtract years and months\n  const dateWithoutMonths = subMonths(date, months + years * 12);\n\n  // Subtract weeks and days\n  const dateWithoutDays = subDays(dateWithoutMonths, days + weeks * 7);\n\n  // Subtract hours, minutes and seconds\n  const minutestoSub = minutes + hours * 60;\n  const secondstoSub = seconds + minutestoSub * 60;\n  const mstoSub = secondstoSub * 1000;\n  const finalDate = constructFrom(date, dateWithoutDays.getTime() - mstoSub);\n\n  return finalDate;\n}\n\n// Fallback for modularized imports:\nexport default sub;\n","import { addDays } from \"./addDays.mjs\";\n\n/**\n * @name subDays\n * @category Day Helpers\n * @summary Subtract the specified number of days from the given date.\n *\n * @description\n * Subtract the specified number of days from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be subtracted.\n *\n * @returns The new date with the days subtracted\n *\n * @example\n * // Subtract 10 days from 1 September 2014:\n * const result = subDays(new Date(2014, 8, 1), 10)\n * //=> Fri Aug 22 2014 00:00:00\n */\nexport function subDays(date, amount) {\n  return addDays(date, -amount);\n}\n\n// Fallback for modularized imports:\nexport default subDays;\n","import { isValid } from \"./isValid.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { lightFormatters } from \"./_lib/format/lightFormatters.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { lightFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp = /(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\n/**\n * @private\n */\n\n/**\n * @name lightFormat\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. Unlike `format`,\n * `lightFormat` doesn't use locales and outputs date using the most popular tokens.\n *\n * > ⚠️ Please note that the `lightFormat` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   |\n * |---------------------------------|---------|-----------------------------------|\n * | AM, PM                          | a..aaa  | AM, PM                            |\n * |                                 | aaaa    | a.m., p.m.                        |\n * |                                 | aaaaa   | a, p                              |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 |\n * |                                 | yy      | 44, 01, 00, 17                    |\n * |                                 | yyy     | 044, 001, 000, 017                |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |\n * |                                 | MM      | 01, 02, ..., 12                   |\n * | Day of month                    | d       | 1, 2, ..., 31                     |\n * |                                 | dd      | 01, 02, ..., 31                   |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |\n * |                                 | hh      | 01, 02, ..., 11, 12               |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |\n * |                                 | HH      | 00, 01, 02, ..., 23               |\n * | Minute                          | m       | 0, 1, ..., 59                     |\n * |                                 | mm      | 00, 01, ..., 59                   |\n * | Second                          | s       | 0, 1, ..., 59                     |\n * |                                 | ss      | 00, 01, ..., 59                   |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |\n * |                                 | SS      | 00, 01, ..., 99                   |\n * |                                 | SSS     | 000, 001, ..., 999                |\n * |                                 | SSSS    | ...                               |\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param format - The string of tokens\n *\n * @returns The formatted date string\n *\n * @throws `Invalid time value` if the date is invalid\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * const result = lightFormat(new Date(2014, 1, 11), 'yyyy-MM-dd')\n * //=> '2014-02-11'\n */\nexport function lightFormat(date, formatStr) {\n  const _date = toDate(date);\n\n  if (!isValid(_date)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  const tokens = formatStr.match(formattingTokensRegExp);\n\n  // The only case when formattingTokensRegExp doesn't match the string is when it's empty\n  if (!tokens) return \"\";\n\n  const result = tokens\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return \"'\";\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return cleanEscapedString(substring);\n      }\n\n      const formatter = lightFormatters[firstCharacter];\n      if (formatter) {\n        return formatter(_date, substring);\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return substring;\n    })\n    .join(\"\");\n\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  const matches = input.match(escapedStringRegExp);\n\n  if (!matches) {\n    return input;\n  }\n\n  return matches[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default lightFormat;\n","\nimport NIGHT_CLEAR from './backgrounds/kashyyk-game.jpg';\nimport NIGHT_RAIN from'./backgrounds/kamino-game.png';\nimport NIGHT_CLEAR_HUMID from './backgrounds/dagobah.jpg';\n\nimport DAY_CLEAR from  './backgrounds/day-nice.png';\nimport DAY_DRY from './backgrounds/tatooine-day.png';\nimport DAY_RAIN from './backgrounds/day-rain.png';\nimport SUNSET_DRY from './backgrounds/tatooine.jpg';\nimport DAY_PARTLY_CLOUDY from './backgrounds/naboo-partly-cloudy.png';\nimport SUNSET_PARTLY_CLOUDY from './backgrounds/sunset-bespin.png';\n\nimport DAY_FREEZING_CLEAR from './backgrounds/hoth-mtns.jpg';\nimport DAY_FREEZING_SNOW from './backgrounds/snowy.jpg';\n\nimport NIGHT_FREEZING_CLEAR from './backgrounds/hoth-night.png';\nconst NIGHT_FREEZING_SNOW = DAY_FREEZING_SNOW;\n\nimport SNOW from './backgrounds/snowy.jpg'\n\nimport SUNNY_ICON from './icons/sunny.svg';\nimport CLOUDY_ICON from './icons/cloudy.svg';\nimport PARTLY_CLOUDY_ICON from './icons/partly-cloudy.svg';\nimport RAIN_ICON from './icons/rainy.svg';\nimport SNOW_ICON from './icons/snow.svg';\n\nconst BACKGROUNDS = {\n    NIGHT_CLEAR,\n    NIGHT_RAIN,\n    NIGHT_CLEAR_HUMID,\n    DAY_PARTLY_CLOUDY,\n    SUNSET_PARTLY_CLOUDY,\n    DAY_DRY,\n    DAY_RAIN,\n    SUNSET_DRY,\n    DAY_CLEAR,\n    SNOW,\n    DAY_FREEZING_CLEAR,\n    DAY_FREEZING_SNOW,\n    NIGHT_FREEZING_SNOW,\n    NIGHT_FREEZING_CLEAR,\n\n    SUNNY_ICON,\n    CLOUDY_ICON,\n    PARTLY_CLOUDY_ICON,\n    RAIN_ICON,\n    SNOW_ICON\n\n}\n\n\n\n\nexport { BACKGROUNDS };","import { isAfter, isBefore, isMatch, isValid, sub, lightFormat,format } from \"date-fns\";\nimport { getDate, toCSSURL } from \"./general-functions.js\";\nimport { BACKGROUNDS } from \"./globals.js\";\n\n// import sunset  from './backgrounds/sunset-bespin.png';\n\nwindow.isMatch = isMatch;\nwindow.isBefore = isBefore;\nwindow.isAfter = isAfter;\nwindow.isValid = isValid;\nwindow.BACKGROUNDS = BACKGROUNDS;\nwindow.toCSSURL = toCSSURL;\nfunction updateScreen(weatherObject) {\n\n    const middleSection = document.querySelector('.middle-section');\n    const body = document.querySelector('body');\n\n    // Date\n    const todaysDateDOM = document.querySelector('.today-header');\n    const nowTime = new Date();\n    todaysDateDOM.textContent = format(nowTime,'PPPP');\n\n\n\n    let tempUnits = '';\n    let degreeSymbol = '\\u00B0'\n    if (weatherObject.tempUnits === 'F') {\n        tempUnits =  degreeSymbol + ' F';\n    } else {\n        tempUnits = degreeSymbol + ' C';\n    }\n\n    // Is it day or night? \n\n    const sunsetDifferenceHours = 2;\n    const eveningStart = sub(weatherObject.sunset, { hours: sunsetDifferenceHours });\n\n    let timeOfDaySetting = 'day'; // or 'sunset' or 'night';\n\n    console.log(`Current time: ${lightFormat(weatherObject.datetime, 'h:m:aaaa')}`)\n    if (isBefore(weatherObject.datetime, weatherObject.sunrise) ||\n        isAfter(weatherObject.datetime, weatherObject.sunset)) {\n\n        console.log('is before sunrise or after sunset, dark!');\n        timeOfDaySetting = 'night';\n\n\n    } else if (isAfter(weatherObject.datetime, eveningStart) &&\n        isBefore(weatherObject.datetime, weatherObject.sunset)) {\n\n        console.log('evening!');\n        timeOfDaySetting = 'sunset';\n\n\n    } else {\n        console.log('daytime!')\n        timeOfDaySetting = 'day';\n\n    }\n\n    // Humidity: \n    const wetPoint = 75;\n    const dryPoint = 30;\n    let humiditySetting = 0;\n    console.log(`humidity is ${weatherObject.humidity}, range is dry < ${dryPoint}, wet > ${wetPoint} `)\n    if (weatherObject.humidity < dryPoint) {\n        humiditySetting = 'dry';\n    } else if ((weatherObject.humidity > dryPoint) && (weatherObject.humidity < wetPoint)) {\n        humiditySetting = 'moderate';\n    } else {\n        humiditySetting = 'wet';\n    }\n\n    // Precip\n\n    let precipitationSetting = null;\n\n    // check if the word 'rain' is in the conditions string\n    const rainRegex = /rain/i;\n    const snowRegex = /snow/i;\n    const cloudRegex = /cloud/i;\n    console.log(`conditions: ${weatherObject.conditions}`);\n\n    const weatherIcon = document.querySelector('.todays-icon-container')\n    if (rainRegex.test(weatherObject.conditions)) {\n        console.log(`theres rain here`);\n        precipitationSetting = 'rain';\n        weatherIcon.style.backgroundImage = toCSSURL(BACKGROUNDS.RAIN_ICON);\n    } else if (snowRegex.test(weatherObject.conditions)) {\n        console.log('snow');\n        precipitationSetting = 'snow';\n        weatherIcon.style.backgroundImage = toCSSURL(BACKGROUNDS.SNOW_ICON);\n    } else if (cloudRegex.test(weatherObject.conditions)) {\n        console.log('clouds');\n        precipitationSetting = 'clouds';\n        weatherIcon.style.backgroundImage = toCSSURL(BACKGROUNDS.CLOUDY_ICON);\n    } else {\n        console.log('clear enough');\n        precipitationSetting = 'clear';\n        weatherIcon.style.backgroundImage = toCSSURL(BACKGROUNDS.SUNNY_ICON);\n    }\n\n\n    // Temperature: \n\n    let tempSetting = null;\n    const coldPointF = 40;\n    const coldPointC = 5;\n\n    switch(weatherObject.tempUnits){\n        case 'F':\n            if (weatherObject.temp < coldPointF) {\n                tempSetting = 'freezing';\n            }\n            break;\n        case 'C':\n            if (weatherObject.temp < coldPointC) {\n                tempSetting = 'freezing';\n            }\n            break;\n    }\n    \n\n\n    // Background will be chosen on these factors: \n    // light: day, sunset, and night-time\n    // \n\n    \n    switch (timeOfDaySetting) {\n        case 'day':\n            // Styling: \n            body.className = 'light';\n            if (tempSetting !== 'freezing') {\n                switch (precipitationSetting) {\n                    case 'rain':\n                        middleSection.style.backgroundImage = toCSSURL(BACKGROUNDS.DAY_RAIN);\n                        weatherObject.similarToPlanet = 'Ahch-To';\n                        break;\n                    case 'clouds':\n                        middleSection.style.backgroundImage = toCSSURL(BACKGROUNDS.DAY_PARTLY_CLOUDY);\n                        weatherObject.similarToPlanet = 'Naboo';\n                        break;\n                    default:\n                        switch (humiditySetting) {\n                            case 'dry':\n                                middleSection.style.backgroundImage = toCSSURL(BACKGROUNDS.DAY_DRY);\n                                weatherObject.similarToPlanet = 'Tatooine';\n                                break;\n                            default:\n                                middleSection.style.backgroundImage = toCSSURL(BACKGROUNDS.DAY_CLEAR);\n                                weatherObject.similarToPlanet = 'Naboo';\n                        }\n\n                }\n            } else {\n                switch (precipitationSetting) {\n                    case 'snow':\n                        middleSection.style.backgroundImage = toCSSURL(BACKGROUNDS.DAY_FREEZING_SNOW);\n                        weatherObject.similarToPlanet = 'Unknown';\n                        break;\n                    default:\n                        middleSection.style.backgroundImage = toCSSURL(BACKGROUNDS.DAY_FREEZING_CLEAR);\n                        weatherObject.similarToPlanet = 'Hoth';\n                }\n                break;\n            }\n            break;\n        case 'sunset':\n            body.className = 'light';\n            middleSection.style.backgroundImage = toCSSURL(BACKGROUNDS.SUNSET_PARTLY_CLOUDY);\n            weatherObject.similarToPlanet = 'Bespin';\n            break;\n        case 'night':\n            body.className = 'dark';\n            if (tempSetting !== 'freezing') {\n                switch (precipitationSetting) {\n                    case 'rain':\n                        middleSection.style.backgroundImage = toCSSURL(BACKGROUNDS.NIGHT_RAIN);\n                        weatherObject.similarToPlanet = 'Kamino';\n                        break;\n                    default:\n                        switch (humiditySetting) {\n                            case 'wet':\n                                middleSection.style.backgroundImage = toCSSURL(BACKGROUNDS.NIGHT_CLEAR_HUMID);\n                                weatherObject.similarToPlanet = 'Dagobah';\n                                break;\n                            default:\n                                middleSection.style.backgroundImage = toCSSURL(BACKGROUNDS.NIGHT_CLEAR);\n                                weatherObject.similarToPlanet = 'Kashyyk';\n                        }\n\n                }\n            } else {\n                switch (precipitationSetting) {\n                    case 'snow':\n                        middleSection.style.backgroundImage = toCSSURL(BACKGROUNDS.NIGHT_FREEZING_SNOW);\n                        weatherObject.similarToPlanet = 'Unknown';\n                        break;\n                    default:\n                        middleSection.style.backgroundImage = toCSSURL(BACKGROUNDS.NIGHT_FREEZING_CLEAR);\n                        weatherObject.similarToPlanet = 'Hoth';\n                }\n                break;\n            }\n            break;\n    }\n\n\n\n    const locationInfoDOM = document.querySelector('.todays-weather-location');\n    locationInfoDOM.textContent = weatherObject.fullName;\n\n    const localTimeInfoDOM = document.querySelector('.todays-weather-localtime');\n    localTimeInfoDOM.textContent = `Local Time: ${format(weatherObject.datetime,'p')}`;\n\n\n    const currTempDOM = document.querySelector('.current-temp');\n    currTempDOM.textContent = weatherObject.temp + tempUnits;\n\n    const currConditionsDOM = document.querySelector('.current-conditions');\n    currConditionsDOM.textContent = weatherObject.conditions;\n\n\n    const lowDOM = document.querySelector('.high');\n    lowDOM.textContent = weatherObject.high + degreeSymbol;\n\n    const highDOM = document.querySelector('.low');\n    highDOM.textContent = weatherObject.low + degreeSymbol;\n\n    const humidityDOM = document.querySelector('.humidity');\n    humidityDOM.textContent = weatherObject.humidity + '%';\n\n    const currDescriptionDOM = document.querySelector('.current-description');\n    currDescriptionDOM.textContent = weatherObject.description;\n\n    const similarToDOM = document.querySelector('.weather-like');\n    similarToDOM.textContent = `Conditions most similar to ${weatherObject.similarToPlanet}.`;\n\n}\n\nexport { updateScreen }","import { isValid } from \"./isValid.mjs\";\nimport { parse } from \"./parse.mjs\";\n\n/**\n * The {@link isMatch} function options.\n */\n\n/**\n * @name isMatch\n * @category Common Helpers\n * @summary validates the date string against given formats\n *\n * @description\n * Return the true if given date is string correct against the given format else\n * will return false.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * isMatch('23 AM', 'HH a')\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Su            | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 001, ..., 999                |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `isMatch` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `isMatch` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `isMatch` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `isMatch('50', 'yy') //=> true`\n *\n *    `isMatch('75', 'yy') //=> true`\n *\n *    while `uu` will use the year as is:\n *\n *    `isMatch('50', 'uu') //=> true`\n *\n *    `isMatch('75', 'uu') //=> true`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear](https://date-fns.org/docs/setISOWeekYear)\n *    and [setWeekYear](https://date-fns.org/docs/setWeekYear)).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be checked in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are matched (e.g. when matching string 'January 1st' without a year),\n * the values will be taken from today's using `new Date()` date which works as a context of parsing.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateStr - The date string to verify\n * @param format - The string of tokens\n * @param options - An object with options.\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *   see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @returns Is format string a match for date string?\n *\n * @throws `options.locale` must contain `match` property\n * @throws use `yyyy` instead of `YYYY` for formatting years; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Match 11 February 2014 from middle-endian format:\n * const result = isMatch('02/11/2014', 'MM/dd/yyyy')\n * //=> true\n *\n * @example\n * // Match 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * const result = isMatch('28-a de februaro', \"do 'de' MMMM\", {\n *   locale: eo\n * })\n * //=> true\n */\nexport function isMatch(dateStr, formatStr, options) {\n  return isValid(parse(dateStr, formatStr, new Date(), options));\n}\n\n// Fallback for modularized imports:\nexport default isMatch;\n","// index.js\nimport \"./styles.css\";\nimport { Weather } from './weather.js';\nimport { updateScreen } from './pageUpdateFunctions.js'\nconsole.log('Hello World!');\n\nconst visCrossingKey = 'ZCWDE5932FHQ7QKTCRSZ25B94';\nconst urlBeginning = 'https://weather.visualcrossing.com/VisualCrossingWebServices/rest/services/timeline/';\n\nconst body = document.querySelector('body');\n\nconst searchBtn = document.querySelector('.search-btn');\n\nconst unitsBtn = document.querySelector('.convert-temp-btn');\n\nlet units = 'us'\n\nlet w = null;\n\n\n\nsearchBtn.addEventListener('click', () => {\n    getWeatherFromSite(units);\n})\n\nunitsBtn.addEventListener('click', () => {\n    if (w.tempUnits === 'F'){\n        w.convertToCelsius();\n    } else {\n        w.convertToFahrenheit();\n    }\n\n    \n    updateScreen(w);\n\n})\n\n\n\nasync function getWeatherFromSite(units, cityName) {\n    const search = document.querySelector('input');\n    const searchBar = document.querySelector('.search-bar');\n    \n    if (!cityName) {\n        cityName = search.value;\n    }\n\n\n    const fullUrlSearch = urlBeginning + cityName + '?key=' + visCrossingKey + `&unitGroup=${units}`;\n    console.log(`URL is : ${fullUrlSearch}`);\n\n    try {\n\n        const response = await fetch(fullUrlSearch, { mode: 'cors' })\n        const weatherData = await response.json();\n        console.log(\"-----------------------\");\n        console.log(weatherData);\n        window.weatherData = weatherData;\n        w = new Weather(weatherData, units);\n        window.w = w;\n        \n        updateScreen(w);\n        searchBar.value = '';\n        \n\n    } catch (error) {\n\n\n        console.log(`Error: ${error}`);\n        \n        searchBar.setAttribute('placeholder', \"Sorry! Couldn't find this city. Try again.\")\n        searchBar.value = '';\n\n\n    }\n\n    search.focus();\n\n}\n\n\n// Onload\n\n\ngetWeatherFromSite(units,'syracuse, new york')"],"names":["___CSS_LOADER_URL_IMPORT_0___","URL","___CSS_LOADER_EXPORT___","___CSS_LOADER_URL_REPLACEMENT_0___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","_k","url","options","String","__esModule","default","test","slice","hash","needQuotes","replace","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","stylesInDOM","getIndexByIdentifier","identifier","result","modulesToDom","idCountMap","identifiers","base","count","indexByIdentifier","obj","css","sourceMap","references","updater","addElementStyle","byIndex","splice","api","domAPI","update","newObj","remove","lastIdentifiers","newList","index","newLastIdentifiers","_i","_index","memo","insert","style","target","styleTarget","document","querySelector","window","HTMLIFrameElement","contentDocument","head","e","getTarget","Error","appendChild","element","createElement","setAttributes","attributes","styleElement","nonce","setAttribute","insertStyleElement","styleTagTransform","apply","parentNode","removeChild","removeStyleElement","styleSheet","cssText","firstChild","createTextNode","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","Function","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","p","b","baseURI","self","href","nc","getDate","vizCrossingdate","hr","minute","second","now","Date","getFullYear","getMonth","toCSSURL","locals","Weather","constructor","unitsType","fullName","resolvedAddress","temp","currentConditions","high","days","tempmax","low","tempmin","conditions","precip","preciptype","humidity","windSpeed","windspeed","description","datetime","sunset","sunrise","similarToPlanet","units","tempUnits","info","console","table","print7DayForecast","day","log","Math","round","fahrenheitToCelsius","f","celsiusToFahrenheit","c","convertToFahrenheit","convertToCelsius","toDate","argument","argStr","NaN","isValid","date","value","_date","isNaN","Number","constructFrom","defaultOptions","getDefaultOptions","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","width","defaultWidth","formats","formatLong","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","valuesArray","context","formattingValues","defaultFormattingWidth","values","argumentCallback","localize","ordinalNumber","dirtyNumber","_options","number","rem100","era","narrow","abbreviated","wide","quarter","month","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","matchedString","parsePatterns","defaultParseWidth","Array","isArray","array","findIndex","object","findKey","valueCallback","rest","parsePattern","parseInt","parseResult","any","enUS","code","formatDistance","token","tokenValue","addSuffix","comparison","formatRelative","_baseDate","weekStartsOn","firstWeekContainsDate","dateLongFormatter","pattern","timeLongFormatter","longFormatters","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","isProtectedDayOfYearToken","isProtectedWeekYearToken","warnOrThrowProtectedError","format","input","_message","subject","toLowerCase","message","warn","includes","RangeError","Setter","subPriority","validate","_utcDate","ValueSetter","validateValue","setValue","priority","super","set","flags","DateToSystemTimezoneSetter","timestampIsSet","fromDate","setFullYear","setHours","getHours","getMinutes","getSeconds","getMilliseconds","transpose","Parser","run","dateString","parse","setter","_value","pow","millisecondsInWeek","millisecondsInDay","numericPatterns","timezonePatterns","mapValue","parseFnResult","mapFn","parseNumericPattern","parseTimezonePattern","parseAnyDigitsSigned","parseNDigits","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","trunc","isLeapYearIndex","year","startOfWeek","locale","getDay","diff","setDate","getWeekYear","firstWeekOfNextYear","startOfNextYear","firstWeekOfThisYear","startOfThisYear","getTime","startOfISOWeek","getWeek","firstWeek","startOfWeekYear","getISOWeekYear","fourthOfJanuaryOfNextYear","fourthOfJanuaryOfThisYear","getISOWeek","fourthOfJanuary","startOfISOWeekYear","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","addDays","amount","setDay","currentDay","delta","setISODay","getISODay","getTimezoneOffsetInMilliseconds","utcDate","UTC","setUTCFullYear","parsers","G","incompatibleTokens","y","isTwoDigitYear","unit","normalizedTwoDigitYear","Y","R","_flags","firstWeekOfYear","u","Q","setMonth","q","M","L","w","week","setWeek","I","setISOWeek","isLeapYear","D","subpriority","E","wholeWeekDays","floor","B","h","isPM","H","K","hours","setMinutes","s","setSeconds","S","setMilliseconds","X","x","t","T","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","notWhitespaceRegExp","unescapedLatinCharacterRegExp","dateStr","formatStr","referenceDate","assign","subFnOptions","setters","tokens","substring","firstCharacter","longFormatter","usedTokens","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","parser","incompatibleToken","find","usedToken","fullToken","indexOf","uniquePrioritySetters","sort","filter","setterArray","isBefore","dateToCompare","isAfter","_dateToCompare","startOfDay","getDayOfYear","dateLeft","dateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","differenceInCalendarDays","cleanDate","startOfYear","addLeadingZeros","targetLength","abs","padStart","lightFormatters","signedYear","dayPeriodEnumValue","numberOfDigits","milliseconds","formatters","signedWeekYear","weekYear","ceil","isoWeek","dayOfYear","dayOfWeek","localDayOfWeek","isoDayOfWeek","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","O","formatTimezoneShort","z","offset","delimiter","sign","absOffset","minutes","originalDate","parts","isToken","preprocessor","formatterOptions","part","formatter","matched","subMonths","dayOfMonth","endOfDesiredMonth","addMonths","sub","duration","years","months","weeks","seconds","mstoSub","subDays","BACKGROUNDS","NIGHT_CLEAR","NIGHT_RAIN","NIGHT_CLEAR_HUMID","DAY_PARTLY_CLOUDY","SUNSET_PARTLY_CLOUDY","DAY_DRY","DAY_RAIN","SUNSET_DRY","DAY_CLEAR","SNOW","DAY_FREEZING_CLEAR","DAY_FREEZING_SNOW","NIGHT_FREEZING_SNOW","NIGHT_FREEZING_CLEAR","SUNNY_ICON","CLOUDY_ICON","PARTLY_CLOUDY_ICON","RAIN_ICON","SNOW_ICON","updateScreen","weatherObject","middleSection","body","todaysDateDOM","nowTime","textContent","degreeSymbol","eveningStart","timeOfDaySetting","matches","lightFormat","humiditySetting","precipitationSetting","weatherIcon","backgroundImage","tempSetting","className","isMatch","searchBtn","unitsBtn","async","getWeatherFromSite","cityName","search","searchBar","fullUrlSearch","urlBeginning","response","fetch","mode","weatherData","json","error","focus","addEventListener"],"sourceRoot":""}